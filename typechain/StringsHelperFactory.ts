/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StringsHelper } from "./StringsHelper";

export class StringsHelperFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<StringsHelper> {
    return super.deploy(overrides || {}) as Promise<StringsHelper>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StringsHelper {
    return super.attach(address) as StringsHelper;
  }
  connect(signer: Signer): StringsHelperFactory {
    return super.connect(signer) as StringsHelperFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StringsHelper {
    return new Contract(address, _abi, signerOrProvider) as StringsHelper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "asHexString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "asHexString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "asString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "asString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "asString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
    ],
    name: "base64Encode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "base64Encode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mimeType",
        type: "string",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b21806100206000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c80633e6613db1461007d5780636dcbed44146100a65780638159e7ef146100b95780638bf6c319146100cc578063907fad13146100df578063b5d987e3146100f2578063d069e88f14610105578063d5fb1b1914610118575b600080fd5b61009061008b36600461070d565b610126565b60405161009d91906108f1565b60405180910390f35b6100906100b436600461070d565b610137565b6100906100c7366004610818565b610144565b6100906100da36600461087b565b6101e8565b6100906100ed3660046106e4565b6101fb565b61009061010036600461070d565b610211565b61009061011336600461076e565b61021c565b610090610113366004610726565b606061013182610227565b92915050565b6060610131826020610283565b60405163d069e88f60e01b81526060908390309063d069e88f9061016c9086906004016108f1565b60006040518083038186803b15801561018457600080fd5b505afa158015610198573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101c091908101906107a2565b6040516020016101d192919061089d565b604051602081830303815290604052905092915050565b60606101f48383610283565b9392505050565b6060610131826001600160a01b03166014610283565b606061013182610422565b60606101318261051f565b60608161024e5750506040805180820190915260048152630307830360e41b602082015290565b8160005b8115610271578061026281610a24565b915050600882901c9150610252565b61027b8482610283565b949350505050565b606060006102928360026109a7565b61029d90600261097b565b6001600160401b038111156102b4576102b4610a95565b6040519080825280601f01601f1916602001820160405280156102de576020820181803683370190505b509050600360fc1b816000815181106102f9576102f9610a7f565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061032857610328610a7f565b60200101906001600160f81b031916908160001a905350600061034c8460026109a7565b61035790600161097b565b90505b60018111156103cf576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061038b5761038b610a7f565b1a60f81b8282815181106103a1576103a1610a7f565b60200101906001600160f81b031916908160001a90535060049490941c936103c881610a0d565b905061035a565b5083156101f45760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b6060816104465750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610470578061045a81610a24565b91506104699050600a83610993565b915061044a565b6000816001600160401b0381111561048a5761048a610a95565b6040519080825280601f01601f1916602001820160405280156104b4576020820181803683370190505b5090505b841561027b576104c96001836109c6565b91506104d6600a86610a3f565b6104e190603061097b565b60f81b8183815181106104f6576104f6610a7f565b60200101906001600160f81b031916908160001a905350610518600a86610993565b94506104b8565b606081516000141561053f57505060408051602081019091526000815290565b6000604051806060016040528060408152602001610aac604091399050600060038451600261056e919061097b565b6105789190610993565b6105839060046109a7565b9050600061059282602061097b565b6001600160401b038111156105a9576105a9610a95565b6040519080825280601f01601f1916602001820160405280156105d3576020820181803683370190505b509050818152600183018586518101602084015b818310156106415760039283018051603f601282901c811687015160f890811b8552600c83901c8216880151811b6001860152600683901c8216880151811b60028601529116860151901b938201939093526004016105e7565b60038951066001811461065b576002811461066c57610678565b613d3d60f01b600119830152610678565b603d60f81b6000198301525b509398975050505050505050565b600061069961069484610954565b610924565b90508281528383830111156106ad57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126106d557600080fd5b6101f483833560208501610686565b6000602082840312156106f657600080fd5b81356001600160a01b03811681146101f457600080fd5b60006020828403121561071f57600080fd5b5035919050565b60006020828403121561073857600080fd5b81356001600160401b0381111561074e57600080fd5b8201601f8101841361075f57600080fd5b61027b84823560208401610686565b60006020828403121561078057600080fd5b81356001600160401b0381111561079657600080fd5b61027b848285016106c4565b6000602082840312156107b457600080fd5b81516001600160401b038111156107ca57600080fd5b8201601f810184136107db57600080fd5b80516107e961069482610954565b8181528560208385010111156107fe57600080fd5b61080f8260208301602086016109dd565b95945050505050565b6000806040838503121561082b57600080fd5b82356001600160401b038082111561084257600080fd5b61084e868387016106c4565b9350602085013591508082111561086457600080fd5b50610871858286016106c4565b9150509250929050565b6000806040838503121561088e57600080fd5b50508035926020909101359150565b643230ba309d60d91b8152600083516108bd8160058501602088016109dd565b670ed8985cd94d8d0b60c21b60059184019182015283516108e581600d8401602088016109dd565b01600d01949350505050565b60208152600082518060208401526109108160408501602087016109dd565b601f01601f19169190910160400192915050565b604051601f8201601f191681016001600160401b038111828210171561094c5761094c610a95565b604052919050565b60006001600160401b0382111561096d5761096d610a95565b50601f01601f191660200190565b6000821982111561098e5761098e610a53565b500190565b6000826109a2576109a2610a69565b500490565b60008160001904831182151516156109c1576109c1610a53565b500290565b6000828210156109d8576109d8610a53565b500390565b60005b838110156109f85781810151838201526020016109e0565b83811115610a07576000848401525b50505050565b600081610a1c57610a1c610a53565b506000190190565b6000600019821415610a3857610a38610a53565b5060010190565b600082610a4e57610a4e610a69565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220d92c2b501e9fc93838cdebe9469cb35a8b4d6b543b05dd47389386a470004f1f64736f6c63430008060033";
